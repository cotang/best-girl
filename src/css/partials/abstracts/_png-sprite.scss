// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$s-check-name: 's-check';
$s-check-x: 80px;
$s-check-y: 16px;
$s-check-offset-x: -80px;
$s-check-offset-y: -16px;
$s-check-width: 11px;
$s-check-height: 9px;
$s-check-total-width: 94px;
$s-check-total-height: 75px;
$s-check-image: '../img/png-sprite.png';
$s-check: (80px, 16px, -80px, -16px, 11px, 9px, 94px, 75px, '../img/png-sprite.png', 's-check', );
$s-comment-name: 's-comment';
$s-comment-x: 80px;
$s-comment-y: 0px;
$s-comment-offset-x: -80px;
$s-comment-offset-y: 0px;
$s-comment-width: 14px;
$s-comment-height: 14px;
$s-comment-total-width: 94px;
$s-comment-total-height: 75px;
$s-comment-image: '../img/png-sprite.png';
$s-comment: (80px, 0px, -80px, 0px, 14px, 14px, 94px, 75px, '../img/png-sprite.png', 's-comment', );
$s-eye-name: 's-eye';
$s-eye-x: 48px;
$s-eye-y: 35px;
$s-eye-offset-x: -48px;
$s-eye-offset-y: -35px;
$s-eye-width: 19px;
$s-eye-height: 13px;
$s-eye-total-width: 94px;
$s-eye-total-height: 75px;
$s-eye-image: '../img/png-sprite.png';
$s-eye: (48px, 35px, -48px, -35px, 19px, 13px, 94px, 75px, '../img/png-sprite.png', 's-eye', );
$s-heart-active-name: 's-heart-active';
$s-heart-active-x: 20px;
$s-heart-active-y: 62px;
$s-heart-active-offset-x: -20px;
$s-heart-active-offset-y: -62px;
$s-heart-active-width: 15px;
$s-heart-active-height: 13px;
$s-heart-active-total-width: 94px;
$s-heart-active-total-height: 75px;
$s-heart-active-image: '../img/png-sprite.png';
$s-heart-active: (20px, 62px, -20px, -62px, 15px, 13px, 94px, 75px, '../img/png-sprite.png', 's-heart-active', );
$s-heart-name: 's-heart';
$s-heart-x: 37px;
$s-heart-y: 62px;
$s-heart-offset-x: -37px;
$s-heart-offset-y: -62px;
$s-heart-width: 15px;
$s-heart-height: 13px;
$s-heart-total-width: 94px;
$s-heart-total-height: 75px;
$s-heart-image: '../img/png-sprite.png';
$s-heart: (37px, 62px, -37px, -62px, 15px, 13px, 94px, 75px, '../img/png-sprite.png', 's-heart', );
$s-mail-name: 's-mail';
$s-mail-x: 0px;
$s-mail-y: 62px;
$s-mail-offset-x: 0px;
$s-mail-offset-y: -62px;
$s-mail-width: 18px;
$s-mail-height: 13px;
$s-mail-total-width: 94px;
$s-mail-total-height: 75px;
$s-mail-image: '../img/png-sprite.png';
$s-mail: (0px, 62px, 0px, -62px, 18px, 13px, 94px, 75px, '../img/png-sprite.png', 's-mail', );
$s-search-name: 's-search';
$s-search-x: 27px;
$s-search-y: 35px;
$s-search-offset-x: -27px;
$s-search-offset-y: -35px;
$s-search-width: 19px;
$s-search-height: 18px;
$s-search-total-width: 94px;
$s-search-total-height: 75px;
$s-search-image: '../img/png-sprite.png';
$s-search: (27px, 35px, -27px, -35px, 19px, 18px, 94px, 75px, '../img/png-sprite.png', 's-search', );
$s-share-name: 's-share';
$s-share-x: 50px;
$s-share-y: 0px;
$s-share-offset-x: -50px;
$s-share-offset-y: 0px;
$s-share-width: 28px;
$s-share-height: 28px;
$s-share-total-width: 94px;
$s-share-total-height: 75px;
$s-share-image: '../img/png-sprite.png';
$s-share: (50px, 0px, -50px, 0px, 28px, 28px, 94px, 75px, '../img/png-sprite.png', 's-share', );
$s-up-name: 's-up';
$s-up-x: 0px;
$s-up-y: 35px;
$s-up-offset-x: 0px;
$s-up-offset-y: -35px;
$s-up-width: 25px;
$s-up-height: 25px;
$s-up-total-width: 94px;
$s-up-total-height: 75px;
$s-up-image: '../img/png-sprite.png';
$s-up: (0px, 35px, 0px, -35px, 25px, 25px, 94px, 75px, '../img/png-sprite.png', 's-up', );
$s-warning-18-name: 's-warning-18';
$s-warning-18-x: 0px;
$s-warning-18-y: 0px;
$s-warning-18-offset-x: 0px;
$s-warning-18-offset-y: 0px;
$s-warning-18-width: 48px;
$s-warning-18-height: 33px;
$s-warning-18-total-width: 94px;
$s-warning-18-total-height: 75px;
$s-warning-18-image: '../img/png-sprite.png';
$s-warning-18: (0px, 0px, 0px, 0px, 48px, 33px, 94px, 75px, '../img/png-sprite.png', 's-warning-18', );
$spritesheet-width: 94px;
$spritesheet-height: 75px;
$spritesheet-image: '../img/png-sprite.png';
$spritesheet-sprites: ($s-check, $s-comment, $s-eye, $s-heart-active, $s-heart, $s-mail, $s-search, $s-share, $s-up, $s-warning-18, );
$spritesheet: (94px, 75px, '../img/png-sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
